<?php

namespace App\Http\Controllers;

use App\Models\IndexModels;
use App\Models\ShopModels;
use Illuminate\Http\Request;

class ShopController extends Controller
{
    private $model;
    private $model1;
   private $start=0;
   private $take=9;
   private $min=null;
   private $max=null;
   private $search=null;
    public function __construct()
    {

        $this->model= new ShopModels();
        $this->model1= new IndexModels();

        // parent::__call($method, $parameters); // TODO: Change the autogenerated stub
    }


    public function index(Request $request)
    {

//dd($request);
        //$cat = $category;
        $cat = $request->get('category');
        $hotItemCategory = $this->model1->trending($cat,$col='shop');
        $products = $this->model->oglasi($this->start,$this->take,$cat,$this->min,$this->max,$this->search);
        $categoryList = $this->model1->subcategory();
        $ppk = $this->model1->ppk();
        $number_page=$this->model->pages($this->start,$this->take,$cat,$this->min,$this->max,$this->search);
        if (isset($request->change)) {
           // dd($request->change);
            //ajax

            return  count($products)>0 ?  view('ajax.shop_ajax', ["products" => $products]) : ($data=404) ;



        } else {
            return view('store',
                [
                    'hotItem' => $hotItemCategory,
                    'products' => $products,
                    'categoryList' => $categoryList,
                    'ppk' => $ppk,
                    "pages"=>$number_page

                ]);

        }

    }
    public function change_price_filter(Request $request)
    {
        $this->min=$request->min;
        $this->max=$request->max;
        $cat=$request->cat;


        $count=$this->model->countAds($this->min,$this->max,$cat,$this->search);

        if (!$count>0)
        {
            $count=404;
        }

return($count);

    }

    public function price_filter_shop(Request $request)
    {
        $this->min=$request->min;
        $this->max=$request->max;
        $cat=$request->cat;
$this->start=$request->start;
$this->take=$request->take;


        $products=$this->model->oglasi($this->start,$this->take,$cat,$this->min,$this->max,$this->search);

//dd(count($products));

        return  count($products)>0 ?  view('ajax.shop_ajax', ["products" => $products]) : ($data=404) ;


    }
public function pagination(Request $request)
{
    //
    $this->min=$request->min;
    $this->max=$request->max;
    $cat=$request->cat;
    $this->start=$request->start;
    $this->take=$request->take;

    $number_page=$this->model->pages($this->start,$this->take,$cat,$this->min,$this->max,$this->search);

    if(!$number_page>0)
    {
        $number_page=404;
    }

return ($number_page);

}
public function new_page(Request $request)
{
    $this->min=$request->min;
    $this->max=$request->max;
    $cat=$request->cat;
    $this->start=$request->start;
    $this->take=$request->take;



    $products=$this->model->oglasi($this->start,$this->take,$cat,$this->min,$this->max,$this->search);

//dd(count($products));

    return  count($products)>0 ?  view('ajax.shop_ajax', ["products" => $products]) : ($data=404) ;


}




}
